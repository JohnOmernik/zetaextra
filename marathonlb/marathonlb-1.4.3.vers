#!/bin/bash


APP_URL_ROOT="https://github.com/mesosphere/marathon-lb/archive/"
APP_URL_FILE="v1.4.3.tar.gz"
APP_URL="${APP_URL_ROOT}${APP_URL_FILE}"

APP_VER="1.4.3"
APP_VER_DIR="marathon-lb-$APP_VER"
APP_IMG_NAME="marathonlb"
APP_IMG_TAG="$APP_VER"
APP_IMG="${ZETA_DOCKER_REG_URL}/$APP_IMG_NAME:$APP_IMG_TAG"


if [ "$BUILD" == "Y" ]; then

    wget $APP_URL
    if [ "$?" != "0" ]; then
        echo "It appeared your download failed, we can try again with --no-check-certificate if you would like."
        echo "If you choose to use --no-check-certificate, please ensure you understand the risks of this"
        read -e -p "Try download again with --no-check-certificate? (Anything other than Y will exit) " -i "N" NO_CHECK
        if [ "$NO_CHECK" == "Y" ]; then
            wget --no-check-certificate $APP_URL
        else
            echo "Exiting"
            exit 1
        fi
    fi

    tar zxf ${APP_URL_FILE}
    cd $APP_VER_DIR
    if [ "$ZETA_DOCKER_PROXY" != "" ]; then
        DOCKER_LINE1="ENV http_proxy=$ZETA_DOCKER_PROXY"
        DOCKER_LINE2="ENV HTTP_PROXY=$ZETA_DOCKER_PROXY"
        DOCKER_LINE3="ENV https_proxy=$ZETA_DOCKER_PROXY"
        DOCKER_LINE4="ENV HTTPS_PROXY=$ZETA_DOCKER_PROXY"
        DOCKER_LINE5="ENV NO_PROXY=$DOCKER_NOPROXY"
        DOCKER_LINE6="ENV no_proxy=$DOCKER_NOPROXY"
        sed -i "/FROM /a $DOCKER_LINE1" Dockerfile
        sed -i "/FROM /a $DOCKER_LINE2" Dockerfile
        sed -i "/FROM /a $DOCKER_LINE3" Dockerfile
        sed -i "/FROM /a $DOCKER_LINE4" Dockerfile
        sed -i "/FROM /a $DOCKER_LINE5" Dockerfile
        sed -i "/FROM /a $DOCKER_LINE6" Dockerfile
    fi


    sed -i "/apt-get purge -y/a && echo Hi" Dockerfile
    sed -i "/apt-get purge -y/d" Dockerfile

    sudo docker build -t ${APP_IMG} .
    sudo docker push ${APP_IMG}
else
    echo ""
fi
