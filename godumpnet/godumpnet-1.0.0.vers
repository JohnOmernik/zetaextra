#!/bin/bash

APP_VER="1.8.1"


APP_IMG_NAME="golang"
APP_IMG_TAG="$APP_VER"

APP_IMG="${ZETA_DOCKER_REG_URL}/${APP_IMG_NAME}:${APP_IMG_TAG}"
REQ_APP_IMG_NAME="buildbase"


if [ "$BUILD" == "Y" ]; then

cat > ./Dockerfile << EOF

FROM ${ZETA_DOCKER_REG_URL}/$REQ_APP_IMG_NAME


RUN apt-get update && apt-get install -y --no-install-recommends \
        g++ \
        gcc \
        libc6-dev \
        make \
        pkg-config \
    && rm -rf /var/lib/apt/lists/*

ENV GOLANG_VERSION $APP_VER
ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go\$GOLANG_VERSION.linux-amd64.tar.gz
ENV GOLANG_DOWNLOAD_SHA256 a579ab19d5237e263254f1eac5352efcf1d70b9dacadb6d6bb12b0911ede8994

RUN curl -fsSL "\$GOLANG_DOWNLOAD_URL" -o golang.tar.gz \
    && echo "\$GOLANG_DOWNLOAD_SHA256  golang.tar.gz" | sha256sum -c - \
    && tar -C /usr/local -xzf golang.tar.gz \
    && rm golang.tar.gz

ENV GOPATH /go
ENV PATH \$GOPATH/bin:/usr/local/go/bin:\$PATH

RUN mkdir -p "\$GOPATH/src" "\$GOPATH/bin" && chmod -R 777 "\$GOPATH"
WORKDIR \$GOPATH

COPY go-wrapper /usr/local/bin/


EOF

fi
