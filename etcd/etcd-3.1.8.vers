#!/bin/bash

APP_VER="3.1.8"


APP_IMG_NAME="etcd"
APP_IMG_TAG="$APP_VER"

APP_IMG="${ZETA_DOCKER_REG_URL}/${APP_IMG_NAME}:${APP_IMG_TAG}"



APP_URL_BASE="https://github.com/coreos/etcd/releases/download/v${APP_VER}/"
APP_URL_FILE="etcd-v${APP_VER}-linux-amd64.tar.gz"
APP_URL="${APP_URL_BASE}${APP_URL_FILE}"

APP_URL_DIR="etcd-v${APP_VER}-linux-amd64"

if [ "$BUILD" == "Y" ]; then
    curl -O -L $APP_URL
    tar zxf $APP_URL_FILE
    cd $APP_URL_DIR

cat > ./Dockerfile << EOF
FROM alpine:latest

ADD etcd /usr/local/bin/
ADD etcdctl /usr/local/bin/
RUN mkdir -p /var/etcd/
RUN mkdir -p /var/lib/etcd/

# Alpine Linux doesn't use pam, which means that there is no /etc/nsswitch.conf,
# but Golang relies on /etc/nsswitch.conf to check the order of DNS resolving
# (see https://github.com/golang/go/commit/9dee7771f561cf6aee081c0af6658cc81fac3918)
# To fix this we just create /etc/nsswitch.conf and add the following line:
RUN echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf

EXPOSE 2379 2380

# Define default command.
CMD ["/usr/local/bin/etcd"]
EOF
    sudo docker build -t $APP_IMG .
    sudo docker push $APP_IMG
fi
